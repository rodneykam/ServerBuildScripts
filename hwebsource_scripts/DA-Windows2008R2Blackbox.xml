<DataAdapter DataAdapterTypeID="DA-Windows2008R2Blackbox">
  <EntityType EntityTypeDisplayName="Cache" EntityTypeID="Cache" MultipleInstance="true">
    <EntityType EntityTypeDisplayName="Cache Instance" EntityTypeID="Cache Instance" MultipleInstance="true">
      <MetricType MetricTypeID="Dirty Page Threshold" DataType="Value" DataUnit="Units" MetricTypeDisplayName="Dirty Page Threshold">
        <MetricTypeDescription>Threshold for number of dirty pages on system cache</MetricTypeDescription>
      </MetricType>
      <MetricType MetricTypeID="Dirty Pages" DataType="Value" DataUnit="Units" MetricTypeDisplayName="Dirty Pages">
        <MetricTypeDescription>Total number of dirty pages on the system cache</MetricTypeDescription>
      </MetricType>
    </EntityType>
  </EntityType>
  <EntityType EntityTypeDisplayName="LogicalDisk" EntityTypeID="LogicalDisk" MultipleInstance="true">
    <EntityType EntityTypeDisplayName="LogicalDisk Instance" EntityTypeID="LogicalDisk Instance" MultipleInstance="true">
      <MetricType MetricTypeID="Avg Disk Bytes Per Write" DataType="Value" DataUnit="Units" MetricTypeDisplayName="Avg. Disk Bytes/Write">
        <MetricTypeDescription>Avg. Disk Bytes/Write is the average number of bytes transferred to the disk during write operations.</MetricTypeDescription>
      </MetricType>
      <MetricType MetricTypeID="Avg Disk Read Queue Length" DataType="Value" DataUnit="Units" MetricTypeDisplayName="Avg. Disk Read Queue Length">
        <MetricTypeDescription>Avg. Disk Read Queue Length is the average number of read requests that were queued for the selected disk during the sample interval.</MetricTypeDescription>
      </MetricType>
      <MetricType MetricTypeID="Avg Disk sec Per Read" DataType="Value" DataUnit="Units" MetricTypeDisplayName="Avg. Disk sec/Read">
        <MetricTypeDescription>Avg. Disk sec/Read is the average time, in seconds, of a read of data from the disk.</MetricTypeDescription>
      </MetricType>
      <MetricType MetricTypeID="Avg Disk sec Per Write" DataType="Value" DataUnit="Units" MetricTypeDisplayName="Avg. Disk sec/Write">
        <MetricTypeDescription>Avg. Disk sec/Write is the average time, in seconds, of a write of data to the disk.</MetricTypeDescription>
      </MetricType>
      <MetricType MetricTypeID="Current Disk Queue Length" DataType="Value" DataUnit="Units" MetricTypeDisplayName="Current Disk Queue Length">
        <MetricTypeDescription>Current Disk Queue Length is the number of requests outstanding on the disk at the time the performance data is collected. It also includes requests in service at the time of the collection. This is a instantaneous snapshot, not an average over the time interval. Multi-spindle disk devices can have multiple requests that are active at one time, but other concurrent requests are awaiting service. This counter might reflect a transitory high or low queue length, but if there is a sustained load on the disk drive, it is likely that this will be consistently high. Requests experience delays proportional to the length of this queue minus the number of spindles on the disks. For good performance, this difference should average less than two.</MetricTypeDescription>
      </MetricType>
      <MetricType MetricTypeID="Disk Bytes Per sec" DataType="Value" DataUnit="Units" MetricTypeDisplayName="Disk Bytes/sec">
        <MetricTypeDescription>Disk Bytes/sec is the rate bytes are transferred to or from the disk during write or read operations.</MetricTypeDescription>
      </MetricType>
      <MetricType MetricTypeID="Disk Reads Per sec" DataType="Value" DataUnit="Units" MetricTypeDisplayName="Disk Reads/sec">
        <MetricTypeDescription>Disk Reads/sec is the rate of read operations on the disk.</MetricTypeDescription>
      </MetricType>
      <MetricType MetricTypeID="Disk Transfers Per sec" DataType="Value" DataUnit="Units" MetricTypeDisplayName="Disk Transfers/sec">
        <MetricTypeDescription>Disk Transfers/sec is the rate of read and write operations on the disk.</MetricTypeDescription>
      </MetricType>
      <MetricType MetricTypeID="Disk Writes Per sec" DataType="Value" DataUnit="Units" MetricTypeDisplayName="Disk Writes/sec">
        <MetricTypeDescription>Disk Writes/sec is the rate of write operations on the disk.</MetricTypeDescription>
      </MetricType>
      <MetricType MetricTypeID="Free Megabytes" DataType="Value" DataUnit="Units" MetricTypeDisplayName="Free Megabytes">
        <MetricTypeDescription>Free Megabytes displays the unallocated space, in megabytes, on the disk drive in megabytes. One megabyte is equal to 1,048,576 bytes.</MetricTypeDescription>
      </MetricType>
    </EntityType>
  </EntityType>
  <EntityType EntityTypeDisplayName="Memory" EntityTypeID="Memory" MultipleInstance="true">
    <EntityType EntityTypeDisplayName="Memory Instance" EntityTypeID="Memory Instance" MultipleInstance="true">
      <MetricType MetricTypeID="Percent Committed Bytes In Use" DataType="Value" DataUnit="Units" MetricTypeDisplayName="% Committed Bytes In Use">
        <MetricTypeDescription>% Committed Bytes In Use is the ratio of Memory\\Committed Bytes to the Memory\\Commit Limit. Committed memory is the physical memory in use for which space has been reserved in the paging file should it need to be written to disk. The commit limit is determined by the size of the paging file.  If the paging file is enlarged, the commit limit increases, and the ratio is reduced). This counter displays the current percentage value only; it is not an average.</MetricTypeDescription>
      </MetricType>
      <MetricType MetricTypeID="Available MBytes" DataType="Value" DataUnit="Units" MetricTypeDisplayName="Available MBytes">
        <MetricTypeDescription>Available MBytes is the amount of physical memory, in Megabytes, immediately available for allocation to a process or for system use. It is equal to the sum of memory assigned to the standby (cached), free and zero page lists. For a full explanation of the memory manager, refer to MSDN and/or the System Performance and Troubleshooting Guide chapter in the Windows Server 2003 Resource Kit.</MetricTypeDescription>
      </MetricType>
      <MetricType MetricTypeID="Cache Bytes" DataType="Value" DataUnit="Units" MetricTypeDisplayName="Cache Bytes">
        <MetricTypeDescription>Cache Bytes is the sum of the Memory\\System Cache Resident Bytes, Memory\\System Driver Resident Bytes, Memory\\System Code Resident Bytes, and Memory\\Pool Paged Resident Bytes counters.  This counter displays the last observed value only; it is not an average.</MetricTypeDescription>
      </MetricType>
      <MetricType MetricTypeID="Cache Bytes Peak" DataType="Value" DataUnit="Units" MetricTypeDisplayName="Cache Bytes Peak">
        <MetricTypeDescription>Cache Bytes Peak is the maximum number of bytes used by the file system cache since the system was last restarted. This might be larger than the current size of the cache. This counter displays the last observed value only; it is not an average.</MetricTypeDescription>
      </MetricType>
      <MetricType MetricTypeID="Cache Faults Per sec" DataType="Value" DataUnit="Units" MetricTypeDisplayName="Cache Faults/sec">
        <MetricTypeDescription>Cache Faults/sec is the rate at which faults occur when a page sought in the file system cache is not found and must be retrieved from elsewhere in memory (a soft fault) or from disk (a hard fault). The file system cache is an area of physical memory that stores recently used pages of data for applications. Cache activity is a reliable indicator of most application I/O operations. This counter shows the number of faults, without regard for the number of pages faulted in each operation.</MetricTypeDescription>
      </MetricType>
      <MetricType MetricTypeID="Commit Limit" DataType="Value" DataUnit="Units" MetricTypeDisplayName="Commit Limit">
        <MetricTypeDescription>Commit Limit is the amount of virtual memory that can be committed without having to extend the paging file(s).  It is measured in bytes. Committed memory is the physical memory which has space reserved on the disk paging files. There can be one paging file on each logical drive). If the paging file(s) are be expanded, this limit increases accordingly.  This counter displays the last observed value only; it is not an average.</MetricTypeDescription>
      </MetricType>
      <MetricType MetricTypeID="Committed Bytes" DataType="Value" DataUnit="Units" MetricTypeDisplayName="Committed Bytes">
        <MetricTypeDescription>Committed Bytes is the amount of committed virtual memory, in bytes. Committed memory is the physical memory which has space reserved on the disk paging file(s). There can be one or more paging files on each physical drive. This counter displays the last observed value only; it is not an average.</MetricTypeDescription>
      </MetricType>
      <MetricType MetricTypeID="Demand Zero Faults Per sec" DataType="Value" DataUnit="Units" MetricTypeDisplayName="Demand Zero Faults/sec">
        <MetricTypeDescription>Demand Zero Faults/sec is the rate at which a zeroed page is required to satisfy the fault.  Zeroed pages, pages emptied of previously stored data and filled with zeros, are a security feature of Windows that prevent processes from seeing data stored by earlier processes that used the memory space. Windows maintains a list of zeroed pages to accelerate this process. This counter shows the number of faults, without regard to the number of pages retrieved to satisfy the fault. This counter displays the difference between the values observed in the last two samples, divided by the duration of the sample interval.</MetricTypeDescription>
      </MetricType>
      <MetricType MetricTypeID="Free  Zero Page List Bytes" DataType="Value" DataUnit="Units" MetricTypeDisplayName="Free &amp; Zero Page List Bytes">
        <MetricTypeDescription>Free &amp; Zero Page List Bytes is the amount of physical memory, in bytes, that is assigned to the free and zero page lists. This memory does not contain cached data. It is immediately available for allocation to a process or for system use. For a full explanation of the memory manager, refer to MSDN and/or the System Performance and Troubleshooting Guide chapter in the Windows Server 2003 Resource Kit.</MetricTypeDescription>
      </MetricType>
      <MetricType MetricTypeID="Free System Page Table Entries" DataType="Value" DataUnit="Units" MetricTypeDisplayName="Free System Page Table Entries">
        <MetricTypeDescription>Free System Page Table Entries is the number of page table entries not currently in used by the system.  This counter displays the last observed value only; it is not an average.</MetricTypeDescription>
      </MetricType>
      <MetricType MetricTypeID="Pages Input Per sec" DataType="Value" DataUnit="Units" MetricTypeDisplayName="Pages Input/sec">
        <MetricTypeDescription>Pages Input/sec is the rate at which pages are read from disk to resolve hard page faults. Hard page faults occur when a process refers to a page in virtual memory that is not in its working set or elsewhere in physical memory, and must be retrieved from disk. When a page is faulted, the system tries to read multiple contiguous pages into memory to maximize the benefit of the read operation. Compare the value of Memory\\Pages Input/sec to the value of  Memory\\Page Reads/sec to determine the average number of pages read into memory during each read operation.</MetricTypeDescription>
      </MetricType>
      <MetricType MetricTypeID="Pages Output Per sec" DataType="Value" DataUnit="Units" MetricTypeDisplayName="Pages Output/sec">
        <MetricTypeDescription>Pages Output/sec is the rate at which pages are written to disk to free up space in physical memory. Pages are written back to disk only if they are changed in physical memory, so they are likely to hold data, not code. A high rate of pages output might indicate a memory shortage. Windows writes more pages back to disk to free up space when physical memory is in short supply.  This counter shows the number of pages, and can be compared to other counts of pages, without conversion.</MetricTypeDescription>
      </MetricType>
      <MetricType MetricTypeID="Pages Per sec" DataType="Value" DataUnit="Units" MetricTypeDisplayName="Pages/sec">
        <MetricTypeDescription>Pages/sec is the rate at which pages are read from or written to disk to resolve hard page faults. This counter is a primary indicator of the kinds of faults that cause system-wide delays.  It is the sum of Memory\\Pages Input/sec and Memory\\Pages Output/sec.  It is counted in numbers of pages, so it can be compared to other counts of pages, such as Memory\\Page Faults/sec, without conversion. It includes pages retrieved to satisfy faults in the file system cache (usually requested by applications) non-cached mapped memory files.</MetricTypeDescription>
      </MetricType>
      <MetricType MetricTypeID="Pool Nonpaged Allocs" DataType="Value" DataUnit="Units" MetricTypeDisplayName="Pool Nonpaged Allocs">
        <MetricTypeDescription>Pool Nonpaged Allocs is the number of calls to allocate space in the nonpaged pool. The nonpaged pool is an area of system memory area for objects that cannot be written to disk, and must remain in physical memory as long as they are allocated.  It is measured in numbers of calls to allocate space, regardless of the amount of space allocated in each call.  This counter displays the last observed value only; it is not an average.</MetricTypeDescription>
      </MetricType>
      <MetricType MetricTypeID="Pool Nonpaged Bytes" DataType="Value" DataUnit="Units" MetricTypeDisplayName="Pool Nonpaged Bytes">
        <MetricTypeDescription>Pool Nonpaged Bytes is the size, in bytes, of the nonpaged pool, an area of system memory (physical memory used by the operating system) for objects that cannot be written to disk, but must remain in physical memory as long as they are allocated.  Memory\\Pool Nonpaged Bytes is calculated differently than Process\\Pool Nonpaged Bytes, so it might not equal Process\\Pool Nonpaged Bytes\\_Total.  This counter displays the last observed value only; it is not an average.</MetricTypeDescription>
      </MetricType>
      <MetricType MetricTypeID="Pool Paged Allocs" DataType="Value" DataUnit="Units" MetricTypeDisplayName="Pool Paged Allocs">
        <MetricTypeDescription>Pool Paged Allocs is the number of calls to allocate space in the paged pool. The paged pool is an area of system memory (physical memory used by the operating system) for objects that can be written to disk when they are not being used. It is measured in numbers of calls to allocate space, regardless of the amount of space allocated in each call.  This counter displays the last observed value only; it is not an average.</MetricTypeDescription>
      </MetricType>
      <MetricType MetricTypeID="Pool Paged Bytes" DataType="Value" DataUnit="Units" MetricTypeDisplayName="Pool Paged Bytes">
        <MetricTypeDescription>Pool Paged Bytes is the size, in bytes, of the paged pool, an area of system memory (physical memory used by the operating system) for objects that can be written to disk when they are not being used.  Memory\\Pool Paged Bytes is calculated differently than Process\\Pool Paged Bytes, so it might not equal Process\\Pool Paged Bytes\\_Total. This counter displays the last observed value only; it is not an average.</MetricTypeDescription>
      </MetricType>
      <MetricType MetricTypeID="System Cache Resident Bytes" DataType="Value" DataUnit="Units" MetricTypeDisplayName="System Cache Resident Bytes">
        <MetricTypeDescription>System Cache Resident Bytes is the size, in bytes, of the pageable operating system code in the file system cache. This value includes only current physical pages and does not include any virtual memory pages not currently resident. It does equal the System Cache value shown in Task Manager. As a result, this value may be smaller than the actual amount of virtual memory in use by the file system cache. This value is a component of Memory\\System Code Resident Bytes which represents all pageable operating system code that is currently in physical memory. This counter displays the last observed value only; it is not an average.</MetricTypeDescription>
      </MetricType>
    </EntityType>
  </EntityType>
  <EntityType EntityTypeDisplayName="Network Interface" EntityTypeID="Network Interface" MultipleInstance="true">
    <EntityType EntityTypeDisplayName="Network Interface Instance" EntityTypeID="Network Interface Instance" MultipleInstance="true">
      <MetricType MetricTypeID="Bytes Received Per sec" DataType="Value" DataUnit="Units" MetricTypeDisplayName="Bytes Received/sec">
        <MetricTypeDescription>Bytes Received/sec is the rate at which bytes are received over each network adapter, including framing characters. Network Interface\Bytes Received/sec is a subset of Network Interface\Bytes Total/sec.</MetricTypeDescription>
      </MetricType>
      <MetricType MetricTypeID="Bytes Sent Per sec" DataType="Value" DataUnit="Units" MetricTypeDisplayName="Bytes Sent/sec">
        <MetricTypeDescription>Bytes Sent/sec is the rate at which bytes are sent over each network adapter, including framing characters. Network Interface\Bytes Sent/sec is a subset of Network Interface\Bytes Total/sec.</MetricTypeDescription>
      </MetricType>
      <MetricType MetricTypeID="Bytes Total Per sec" DataType="Value" DataUnit="Units" MetricTypeDisplayName="Bytes Total/sec">
        <MetricTypeDescription>Bytes Total/sec is the rate at which bytes are sent and received over each network adapter, including framing characters. Network Interface\Bytes Total/sec is a sum of Network Interface\Bytes Received/sec and Network Interface\Bytes Sent/sec.</MetricTypeDescription>
      </MetricType>
      <MetricType MetricTypeID="Current Bandwidth" DataType="Value" DataUnit="Units" MetricTypeDisplayName="Current Bandwidth">
        <MetricTypeDescription>Current Bandwidth is an estimate of the current bandwidth of the network interface in bits per second (BPS).  For interfaces that do not vary in bandwidth or for those where no accurate estimation can be made, this value is the nominal bandwidth.</MetricTypeDescription>
      </MetricType>
      <MetricType MetricTypeID="Output Queue Length" DataType="Value" DataUnit="Units" MetricTypeDisplayName="Output Queue Length">
        <MetricTypeDescription>Output Queue Length is the length of the output packet queue (in packets). If this is longer than two, there are delays and the bottleneck should be found and eliminated, if possible. Since the requests are queued by the Network Driver Interface Specification (NDIS) in this implementation, this will always be 0.</MetricTypeDescription>
      </MetricType>
      <MetricType MetricTypeID="Packets Outbound Errors" DataType="Value" DataUnit="Units" MetricTypeDisplayName="Packets Outbound Errors">
        <MetricTypeDescription>Packets Outbound Errors is the number of outbound packets that could not be transmitted because of errors.</MetricTypeDescription>
      </MetricType>
      <MetricType MetricTypeID="Packets Received Errors" DataType="Value" DataUnit="Units" MetricTypeDisplayName="Packets Received Errors">
        <MetricTypeDescription>Packets Received Errors is the number of inbound packets that contained errors preventing them from being deliverable to a higher-layer protocol.</MetricTypeDescription>
      </MetricType>
      <MetricType MetricTypeID="Packets Received Per sec" DataType="Value" DataUnit="Units" MetricTypeDisplayName="Packets Received/sec">
        <MetricTypeDescription>Packets Received/sec is the rate at which packets are received on the network interface.</MetricTypeDescription>
      </MetricType>
      <MetricType MetricTypeID="Packets Sent Per sec" DataType="Value" DataUnit="Units" MetricTypeDisplayName="Packets Sent/sec">
        <MetricTypeDescription>Packets Sent/sec is the rate at which packets are sent on the network interface.</MetricTypeDescription>
      </MetricType>
      <MetricType MetricTypeID="Packets Per sec" DataType="Value" DataUnit="Units" MetricTypeDisplayName="Packets/sec">
        <MetricTypeDescription>Packets/sec is the rate at which packets are sent and received on the network interface.</MetricTypeDescription>
      </MetricType>
    </EntityType>
  </EntityType>
  <EntityType EntityTypeDisplayName="Paging File" EntityTypeID="Paging File" MultipleInstance="true">
    <EntityType EntityTypeDisplayName="Paging File Instance" EntityTypeID="Paging File Instance" MultipleInstance="true">
      <MetricType MetricTypeID="Percent Usage" DataType="Value" DataUnit="Units" MetricTypeDisplayName="% Usage">
        <MetricTypeDescription>The amount of the Page File instance in use in percent.  See also Process\\Page File Bytes.</MetricTypeDescription>
      </MetricType>
      <MetricType MetricTypeID="Percent Usage Peak" DataType="Value" DataUnit="Units" MetricTypeDisplayName="% Usage Peak">
        <MetricTypeDescription>The peak usage of the Page File instance in percent.  See also Process\\Page File Bytes Peak.</MetricTypeDescription>
      </MetricType>
    </EntityType>
  </EntityType>
</DataAdapter>